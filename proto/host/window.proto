syntax = "proto3";

package host;
option java_package = "bot.cline.host.proto";
option java_multiple_files = true;

import "common.proto";

// Provides methods for working with IDE windows and editors.
service WindowService {
  // Opens a text document in the editor and returns editor information.
  rpc showTextDocument(ShowTextDocumentRequest) returns (TextEditorInfo);
  rpc showOpenDialogue(ShowOpenDialogueRequest) returns (SelectedResources);
  rpc showMessage(ShowMessageRequest) returns (SelectedResponse);
  // Gets the currently active text editor information.
  rpc getActiveTextEditor(GetActiveTextEditorRequest) returns (ActiveTextEditorInfo);
  // Gets information about all visible text editors.
  rpc getVisibleTextEditors(GetVisibleTextEditorsRequest) returns (VisibleTextEditorsInfo);
  // Shows a save dialog for file selection.
  rpc showSaveDialog(ShowSaveDialogRequest) returns (ShowSaveDialogResponse);
}

message ShowTextDocumentRequest {
  cline.Metadata metadata = 1;
  string path = 2;
  optional ShowTextDocumentOptions options = 3;
}

// See https://code.visualstudio.com/api/references/vscode-api#TextDocumentShowOptions
message ShowTextDocumentOptions {
  optional bool preview = 1;
  optional bool preserve_focus = 2;
  optional int32 view_column = 3;
}

message TextEditorInfo {
  string document_path = 1;
  optional int32 view_column = 2;
  bool is_active = 3;
}

message ShowOpenDialogueRequest {
  cline.Metadata metadata = 1;
  optional bool can_select_many = 2;
  optional string open_label = 3;
  optional ShowOpenDialogueFilterOption filters = 4;
}

message ShowOpenDialogueFilterOption {
  repeated string files = 1;
}

message SelectedResources {
  repeated string paths = 1;
}

enum ShowMessageType {
  ERROR = 0;
  INFORMATION = 1;
  WARNING = 2;
}

message ShowMessageRequest {
  cline.Metadata metadata = 1;
  ShowMessageType type = 2;
  string message = 3;
  optional ShowMessageRequestOptions options = 4;
}

message ShowMessageRequestOptions {
  repeated string items = 1;
  optional bool modal = 2;
  optional string detail = 3;

}

message SelectedResponse {
  optional string selected_option = 1;
}

message GetActiveTextEditorRequest {
  cline.Metadata metadata = 1;
}

message ActiveTextEditorInfo {
  optional string document_path = 1;
  optional int32 view_column = 2;
  optional string language_id = 3;
  optional TextSelection selection = 4;
  bool is_active = 5;
}

message TextSelection {
  int32 start_line = 1;
  int32 start_character = 2;
  int32 end_line = 3;
  int32 end_character = 4;
}

message GetVisibleTextEditorsRequest {
  cline.Metadata metadata = 1;
}

message VisibleTextEditorsInfo {
  repeated VisibleTextEditorInfo editors = 1;
}

message VisibleTextEditorInfo {
  string document_path = 1;
  optional int32 view_column = 2;
  optional string language_id = 3;
  optional TextSelection selection = 4;
  bool is_active = 5;
}

message ShowSaveDialogRequest {
  cline.Metadata metadata = 1;
  optional string default_uri = 2;
  optional ShowSaveDialogFilterOption filters = 3;
  optional string save_label = 4;
}

message ShowSaveDialogFilterOption {
  map<string, FileExtensionList> filter_map = 1;
}

message FileExtensionList {
  repeated string extensions = 1;
}

message ShowSaveDialogResponse {
  optional string path = 1;
}
